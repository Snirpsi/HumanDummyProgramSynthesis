#!/usr/bin/python3
numbers = [1,2,3,4,9]
if __name__ == '__main__':
    #A function that stores a list of numbers.
    #The function will return a list with all the numbers from 1 to 9.
    #The function will also print out the list.
    #The function will also accept a number as a parameter.
    numbers = range(1,10)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)
    print(numbers)

