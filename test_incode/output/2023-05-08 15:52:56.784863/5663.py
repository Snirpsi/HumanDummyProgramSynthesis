#!/usr/bin/python3
words = ["hello","world","!"]
if __name__ == '__main__':
    #A program that converts words.txt into words.txt with spaces replaced by underscores.
    words = [word.strip().replace(' ', '_') for word in open(words.txt)]
    words = [word.lower() for word in words]
    words = [word for word in words if word.isalpha()]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in words]
    words = [word for word in words if word not in word

